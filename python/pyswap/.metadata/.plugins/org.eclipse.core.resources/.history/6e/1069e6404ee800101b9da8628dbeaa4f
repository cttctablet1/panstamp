#########################################################################
#
# ParamDialog
#
# Copyright (c) 2011 Daniel Berenguer <dberenguer@usapiens.com>
#
# This file is part of the panStamp project.
#
# panStamp  is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# panStamp is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with panLoader; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301
# USA
#
#########################################################################
__author__= "Daniel Berenguer"
__date__  = "$Sep 1, 2011 10:39:23 AM$"
#########################################################################

from ConfigDialog import ConfigDialog
from validators import TextValidator, BoolValidator

from swap.SwapDefs import SwapType

import wx

class ParamDialog(ConfigDialog):
    """
    General parameter configuration dialog
    """
    def _createControls(self):
        """
        Create GUI controls
        """
        # Add control for every parameter contained in the register
        for i, param in enumerate(self.parameters):
            if param.type == SwapType.BINARY:
                self.addToLayout(wx.CheckBox(self, -1, param.name,
                    validator=BoolValidator(self, "parameters", i)))
            elif param.type in [SwapType.NUMBER, SwapType.STRING]:
                if param.verif is not None:
                      
                self.addToLayout(wx.TextCtrl(self, -1, validator=TextValidator(self, "parameters", i, param.regex)), param.name)

        self.addOkCancelButtons()


    def _addWidget(self, index):
        """
        Add widget to the layout
        
        'index'    Index of hte parameter within self.parameters
        """
        param = self.parameters[index]
        if param.verif == "MONTH":
            months = ["January", "February", "March", "April", "June", "May", "July", "August", "September", "October", "November", "December"]
            self.addToLayout(wx.ComboBox(self, validator=TextValidator(self, "parameters", index, None), choices=months, style=wx.CB_READONLY), param.name)
        
    def __init__(self, parent=None, register=None):
        """
        Class constructor

        'parent'     Parent object
        'register'   SWAP Register to be configured by this dialog
        """
        ConfigDialog.__init__(self, parent, title=register.name)
        # Register to be configured
        self.parameters = register.lstItems               
        # Create widgets
        self._createControls()
        # Layout widgets
        self.doLayout()
        # Fit dialog size to its contents
        self.Fit()
        # Display dialog
        self.ShowModal()    # instead of Show(True)
